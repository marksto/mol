{"version":3,"sources":["../../mol.node.jam.js","mol.ts","../../ambient/ambient.ts","../../log/log.ts","../../log/log_context.ts","../../log/log_debug.node.ts","../../log/log_filter.node.ts","../../log/log_group.ts","../../fail/fail.ts","../../test/test.test.ts","../../compare/any/any.test.ts","../../compare/any/any.ts","../../conform/conform.test.ts","../../conform/conform.ts","../../assert/assert.test.ts","../../assert/assert.ts","../../object/object.test.ts","../../object/object.ts","../../defer/defer.ts","../../state/stack/stack.ts","../../atom/atom.test.ts","../../atom/atom.ts","../../../node/node.node.ts","../../dom/context/context.node.ts","../../dom/context/context.ts","../../dom/jsx/jsx.test.tsx","../../dom/jsx/jsx.ts","../../dict/dict.test.tsx","../../dict/dict.ts","../mem.test.ts","../mem.ts"],"names":[],"mappings":"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","file":"node.test.js","sourcesContent":[null,"declare namespace $ {}\nexport = $\n","namespace $ {\n\n\texport namespace $$ { export let $$ : typeof $ }\n\n\texport type $mol_ambient_context = Window & {\n\t\tPromise : PromiseConstructor\n\t\tMath : Math\n\t\tXMLHttpRequest : typeof XMLHttpRequest\n\t} & ( typeof $.$$ ) & ( typeof $ )\n\n\texport function $mol_ambient( overrides : Partial< $mol_ambient_context > ) : $mol_ambient_context {\n\t\treturn Object.setPrototypeOf( overrides , this )\n    }\n    \n}\n","namespace $ {\n\n\texport function $mol_log( path : any , ... values : any[] ) {\n\t\t\n\t\tif( $mol_log_filter() == null ) return\n\t\t\n\t\tpath = String( path )\n\t\tif( path.indexOf( $mol_log_filter() ) === -1 ) return\n\t\t\n\t\tif( $mol_log_context() ) $mol_log_context()()\n\t\t\n\t\tconsole.debug( path , ... values )\n\n\t\tif( $mol_log_debug() == null ) return\n\t\tif( path.indexOf( $mol_log_debug() ) === -1 ) return\n\t\t\n\t\tdebugger\n\t}\n\t\n}\n","namespace $ {\n\n\tlet context : ()=> void = null\n\texport function $mol_log_context( next = context ) {\n\t\treturn context = next\n\t}\n\n}\n","namespace $ {\n\n\tlet debug : ()=> void\n\texport function $mol_log_debug( next = debug ) {\n\t\treturn debug = next\n\t}\n\n}\n","namespace $ {\n\n\tlet filter : string\n\texport var $mol_log_filter = function $mol_log_filter( next = filter ) {\n\t\treturn filter = next\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_log_group< Task extends Function >( name : string , task : Task ) {\n\t\t\n\t\tconst filter = $mol_log_filter()\n\t\tif( filter == null ) return task\n\n\t\treturn function $mol_log_group_wrapper( ... args : any [] ) {\n\n\t\t\tlet started = false\n\t\t\tlet prev = $mol_log_context()\n\n\t\t\t$mol_log_context( ()=> {\n\t\t\t\tif( prev ) prev()\n\t\t\t\tstarted = true\n\n\t\t\t\tif( filter ) console.group( name )\n\t\t\t\telse console.groupCollapsed( name )\n\n\t\t\t\t$mol_log_context( prev = null )\n\t\t\t} )\n\t\t\t\n\t\t\ttry {\n\t\t\t\treturn task.apply( this , args )\n\t\t\t} finally {\n\t\t\t\tif( started ) console.groupEnd()\n\t\t\t\t$mol_log_context( prev )\n\t\t\t}\n\n\t\t} as any as Task\n\n\t}\n\n}\n","namespace $ {\n\n\texport let $mol_fail_catched = new WeakSet< any >()\n\n\texport function $mol_fail_hidden( error : any ) : never {\n\t\tthrow error /// Use 'Never Pause Here' breakpoint in DevTools\n\t}\n\n}\n","namespace $ {\n\n\texport namespace $$ { let $ }\n\t\n\texport function $mol_test( set : { [ name : string ] : string | ( ( context : $mol_ambient_context )=> void ) } ) {\n\t\t\n\t\tfor( let name in set ) {\n\n\t\t\tconst code = set[ name ]\n\t\t\tconst test = ( typeof code === 'string' ) ? new Function( '' , code ) as ()=> void : code\n\t\t\t\n\t\t\t$mol_test_all.push( $mol_log_group( name , test ) )\n\t\t}\n\n\t\t$mol_test_schedule()\n\t}\n\n\texport let $mol_test_mocks = [] as Array< ( context : $mol_ambient_context )=> void >\n\n\texport const $mol_test_all = [] as Array< ( context : $mol_ambient_context )=> void >\n\n\texport async function $mol_test_run() {\n\n\t\tfor( var test of $mol_test_all ) {\n\n\t\t\tlet context = Object.create( $$ )\n\t\t\tfor( let mock of $mol_test_mocks ) await mock( context )\n\t\t\t\n\t\t\tawait test( context )\n\t\t}\n\t\t\n\t\tconsole.info( '$mol_test' , $mol_test_all.length )\n\t}\n\t\n\tlet scheduled = false\n\texport function $mol_test_schedule() {\n\n\t\tif( scheduled ) return\n\t\tscheduled = true\n\n\t\tsetTimeout( $mol_log_group( '$mol_test' , ()=> {\n\t\t\tscheduled = false\n \t\t\t$mol_test_run()\n\t\t} ) )\n\t\t\n\t}\n\n\n\t$mol_test_mocks.push( context => {\n\t\tlet seed = 0\n\n\t\tcontext.Math = Object.create( Math )\n\t\tcontext.Math.random = ()=> Math.sin( seed++ )\n\n\t\tconst forbidden = [ 'XMLHttpRequest' , 'fetch' ]\n\n\t\tfor( let api of forbidden ) {\n\t\t\tcontext[ api ] = new Proxy( function(){} , {\n\t\t\t\tget() {\n\t\t\t\t\t$mol_fail_hidden( new Error( `${ api } is forbidden in tests` ) )\n\t\t\t\t} ,\n\t\t\t\tapply() {\n\t\t\t\t\t$mol_fail_hidden( new Error( `${ api } is forbidden in tests` ) )\n\t\t\t\t} ,\n\t\t\t} )\n\t\t}\n\t\t\n\t} )\n\n\t$mol_test({\n\n\t\t'mocked Math.random'( $ ) {\n\t\t\tconsole.assert( $.Math.random() === 0 )\n\t\t\tconsole.assert( $.Math.random() === Math.sin(1) )\n\t\t} ,\n\n\t\t'forbidden XMLHttpRequest'( $ ) {\n\t\t\ttry {\n\t\t\t\tconsole.assert( void new $.XMLHttpRequest )\n\t\t\t} catch( error ) {\n\t\t\t\tconsole.assert( error.message === 'XMLHttpRequest is forbidden in tests' )\n\t\t\t}\n\t\t} ,\n\n\t\t'forbidden fetch'( $ ) {\n\t\t\ttry {\n\t\t\t\tconsole.assert( void $.fetch('') )\n\t\t\t} catch( error ) {\n\t\t\t\tconsole.assert( error.message === 'fetch is forbidden in tests' )\n\t\t\t}\n\t\t} ,\n\n\t})\n\t\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'objects by reference' () {\n\t\t\t$mol_assert_equal( $mol_compare_any( {} , {} ) , false )\n\t\t} ,\n\n\t\t'primitives by value' () {\n\t\t\t$mol_assert_equal( $mol_compare_any( 'a' , 'a' ) , true )\n\t\t} ,\n\n\t\t'NaN by value' () {\n\t\t\t$mol_assert_equal( $mol_compare_any( Number.NaN , Number.NaN ) , true )\n\t\t} ,\n\n\t\t'NaN not equal zero' () {\n\t\t\t$mol_assert_equal( $mol_compare_any( Number.NaN , 0 ) , false )\n\t\t} ,\n\n\t})\n\n}\n","namespace $ {\n\n\texport function $mol_compare_any( a : any , b : any ) {\n\t\t\n\t\tif( a === b ) return true\n\t\t\n\t\tif( !Number.isNaN( a ) ) return false\n\t\tif( !Number.isNaN( b ) ) return false\n\n\t\treturn true\n\t}\n\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'return source when same object'() {\n\t\t\tconst target = {}\n\t\t\t$mol_assert_equal( $mol_conform( target , target ) , target )\n\t\t} ,\n\n\t\t'return target when some is not object'() {\n\t\t\tconst obj = { a : 1 }\n\t\t\t$mol_assert_equal( $mol_conform( true , obj ) , true )\n\t\t\t$mol_assert_equal( $mol_conform( obj , true ) , obj )\n\t\t} ,\n\n\t\t'return target when some is null'() {\n\t\t\tconst obj = { a : 1 }\n\t\t\t$mol_assert_equal( $mol_conform( null , obj ) , null )\n\t\t\t$mol_assert_equal( $mol_conform( obj , null ) , obj )\n\t\t} ,\n\n\t\t'return target when some is undefined'() {\n\t\t\tconst obj = { a : 1 }\n\t\t\t$mol_assert_equal( $mol_conform( undefined , obj ) , undefined )\n\t\t\t$mol_assert_equal( $mol_conform( obj , undefined ) , obj )\n\t\t} ,\n\n\t\t'return target when different keys count'() {\n\t\t\tconst target = [ 1 , 2 , 3 ]\n\t\t\tconst source = [ 1 , 2 , 3 , undefined ]\n\t\t\tconst result = $mol_conform( target , source )\n\t\t\t\n\t\t\t$mol_assert_equal( result , target )\n\t\t\t$mol_assert_equal( result.join(',') , '1,2,3' )\n\t\t} ,\n\n\t\t'return source when array values are strong equal'() {\n\t\t\tconst source = [ 1 , 2 , 3 ]\n\t\t\t$mol_assert_equal( $mol_conform( [ 1 , 2 , 3 ] , source ) , source )\n\t\t} ,\n\n\t\t'return source when object values are strong equal'() {\n\t\t\tconst source = { a : 1 , b : 2 }\n\t\t\t$mol_assert_equal( $mol_conform( { a : 1 , b : 2 } , source ) , source )\n\t\t} ,\n\n\t\t'return target when some values are not equal'() {\n\t\t\tconst target = [ 1 , 2 , 3 ]\n\t\t\tconst source = [ 1 , 2 , 5 ]\n\t\t\tconst result = $mol_conform( target , source )\n\t\t\t\n\t\t\t$mol_assert_equal( result , target )\n\t\t\t$mol_assert_equal( result.join(',') , '1,2,3' )\n\t\t} ,\n\n\t\t'return source when values are deep equal'() {\n\t\t\tconst source = [ 1 , [ 2 , [ 3 ] ] ]\n\t\t\t$mol_assert_equal( $mol_conform( [ 1 , [ 2 , [ 3 ] ] ] , source ) , source )\n\t\t} ,\n\n\t\t'return target with equal values from source and not equal from target'() {\n\t\t\tconst source = [ [ 1 ] , [ 2 ] ]\n\t\t\tconst target = [ [ 1 ] , [ 3 ] ]\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , target )\n\t\t\t$mol_assert_equal( result[0] , source[0] )\n\t\t\t$mol_assert_equal( result[1] , target[1] )\n\t\t} ,\n\n\t\t'return target when equal but with different class'() {\n\t\t\tconst target = { '0' : 1 }\n\t\t\t$mol_assert_equal( $mol_conform( target , [ 1 ] ) , target )\n\t\t} ,\n\n\t\t'return target when conformer for class is not defined'() {\n\t\t\tconst Obj = class {}\n\n\t\t\tconst source = new Obj \n\t\t\tconst target = new Obj\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , target )\n\t\t} ,\n\n\t\t'return target when has cyclic reference'() {\n\t\t\tconst source = { foo : {} }\n\t\t\tsource['self'] = source\n\n\t\t\tconst target = { foo : {} }\n\t\t\ttarget['self'] = target\n\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , target )\n\t\t\t$mol_assert_equal( result['self'] , target )\n\t\t\t$mol_assert_equal( result.foo , source.foo )\n\t\t} ,\n\n\t\t'return source when equal dates'() {\n\t\t\tconst source = new Date( 12345 )\n\t\t\tconst target = new Date( 12345 )\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , source )\n\t\t} ,\n\n\t\t'return source when equal regular expressions'() {\n\t\t\tconst source = /\\x22/mig\n\t\t\tconst target = /\\x22/mig\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , source )\n\t\t} ,\n\t\t\n\t\t'return cached value if already conformed'() {\n\t\t\tconst source = [ [ 1 ] , [ 3 ] ]\n\t\t\tconst target = [ [ 2 ] , [ 3 ] ]\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\ttarget[ 0 ][ 0 ] = 1\n\t\t\t$mol_assert_equal( $mol_conform( target[0] , source[0] ) , target[0] )\n\t\t} ,\n\n\t\t'skip readlony fields'() {\n\t\t\tconst source = { foo : {} , bar : {} }\n\n\t\t\tconst target = { foo : {} , bar : {} }\n\t\t\tObject.defineProperty( target , 'bar' , { value : {} , writable : false } )\n\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , target )\n\t\t\t$mol_assert_equal( result.foo , source.foo )\n\t\t\t$mol_assert_equal( result.bar , target.bar )\n\t\t} ,\n\n\t\t'object with NaN'() {\n\n\t\t\tconst source = { foo : Number.NaN }\n\t\t\tconst target = { foo : Number.NaN }\n\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , source )\n\t\t} ,\n\n\t\t'array with NaN'() {\n\n\t\t\tconst source = [ Number.NaN ]\n\t\t\tconst target = [ Number.NaN ]\n\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , source )\n\t\t} ,\n\n\t})\n\n}\n","namespace $ {\n\n\tconst cache = new WeakMap< any , boolean >()\n\n\texport const $mol_conform_stack = [] as any[]\n\n\texport function $mol_conform< Target , Source >( target : Target , source : Source ) : Target {\n\n\t\tif( $mol_compare_any( target , source ) ) return source as any\n\n\t\tif( !target || typeof target !== 'object' ) return target\n\t\tif( !source || typeof source !== 'object' ) return target\n\n\t\tif( target instanceof Error ) return target\n\t\tif( source instanceof Error ) return target\n\t\t\n\t\tif( target.constructor !== source.constructor ) return target\n\n\t\tif( cache.get( target ) ) return target\n\t\tcache.set( target , true )\n\t\t\n\t\tconst conform = $mol_conform_handlers.get( target.constructor )\n\t\tif( !conform ) return target\n\n\t\tif( $mol_conform_stack.indexOf( target ) !== -1 ) return target\n\n\t\t$mol_conform_stack.push( target )\n\n\t\ttry { return conform( target , source ) }\n\t\tfinally { $mol_conform_stack.pop() }\n\n\t}\n\n\texport const $mol_conform_handlers = new WeakMap< Object , ( target : any , source : any )=> any >()\n\n\texport function $mol_conform_handler< Class >(\n\t\tcl : { new( ... args : any[] ) : Class } ,\n\t\thandler : ( target : Class , source : Class )=> Class ,\n\t) {\n\t\t$mol_conform_handlers.set( cl , handler )\n\t}\n\n\t$mol_conform_handler( Array , ( target , source )=> {\n\t\t\n\t\tlet equal = target.length === source.length\n\n\t\tfor( let i = 0 ; i < target.length ; ++i ) {\n\t\t\tconst conformed = $mol_conform( target[i] , source[i] )\n\t\t\tif( !$mol_compare_any( conformed , target[i] ) ) {\n\t\t\t\ttry { target[i] = conformed }\n\t\t\t\tcatch( error ) { equal = false }\n\t\t\t}\n\t\t\tif( equal && !$mol_compare_any( conformed , source[i] ) ) equal = false\n\t\t}\n\n\t\treturn equal ? source : target\n\t} )\n\n\t$mol_conform_handler( Object , ( target , source )=> {\n\n\t\tlet count = 0\n\t\tlet equal = true\n\n\t\tfor( let key in target ) {\n\n\t\t\tconst conformed = $mol_conform( target[key] , source[key] )\n\t\t\t\n\t\t\tif( conformed !== target[key] ) {\n\t\t\t\ttry { target[key] = conformed } catch( error ) {}\n\t\t\t\tif( !$mol_compare_any( conformed , target[key] ) ) equal = false\n\t\t\t}\n\t\t\t\n\t\t\tif( !$mol_compare_any( conformed , source[key] ) ) equal = false\n\t\t\t\n\t\t\t++ count\n\t\t}\n\n\t\tfor( let key in source ) if( -- count < 0 ) break\n\n\t\treturn ( equal && count === 0 ) ? source : target\n\t} )\n\n\t$mol_conform_handler( Date , ( target , source )=> {\n\t\tif( target.getTime() === source.getTime() ) return source\n\t\treturn target \n\t} )\n\n\t$mol_conform_handler( RegExp , ( target , source )=> {\n\t\tif( target.toString() === source.toString() ) return source\n\t\treturn target\n\t} )\n\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'must be false'() {\n\t\t\t$mol_assert_not( 0 )\n\t\t} ,\n\t\t\n\t\t'must be true'() {\n\t\t\t$mol_assert_ok( 1 )\n\t\t} ,\n\t\t\n\t\t'two must be equal'() {\n\t\t\t$mol_assert_equal( 2 , 2 )\n\t\t} ,\n\t\t\n\t\t'three must be equal'() {\n\t\t\t$mol_assert_equal( 2 , 2 , 2 )\n\t\t} ,\n\t\t\n\t\t'two must be unique'() {\n\t\t\t$mol_assert_unique( [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t\t'three must be unique'() {\n\t\t\t$mol_assert_unique( [ 3 ] , [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t\t'two must be alike'() {\n\t\t\t$mol_assert_like( [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t\t'three must be alike'() {\n\t\t\t$mol_assert_like( [ 3 ] , [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t} )\n}\n","namespace $ {\n\t\n\texport function $mol_assert_ok( value : any ) {\n\t\tif( value ) return\n\t\tthrow new Error( `${value} ≠ true` )\n\t}\n\t\n\texport function $mol_assert_not( value : any ) {\n\t\tif( !value ) return\n\t\tthrow new Error( `${value} ≠ false` )\n\t}\n\t\n\texport function $mol_assert_fail( handler : ()=> any , ErrorRight? : any ) {\n\t\ttry {\n\t\t\thandler()\n\t\t} catch( error ) {\n\t\t\tif( ErrorRight ) if(!( error instanceof ErrorRight )) throw error\n\t\t\treturn error\n\t\t}\n\t\tthrow new Error( 'Not failed' )\n\t}\n\t\n\texport function $mol_assert_equal< Value >( ... args : Value[] ) {\n\t\tfor( let i = 0 ; i < args.length ; ++i ) {\n\t\t\tfor( let j = 0 ; j < args.length ; ++j ) {\n\t\t\t\tif( i === j ) continue\n\t\t\t\tif( Number.isNaN( args[i] as any as number ) && Number.isNaN( args[j] as any as number ) ) continue\n\t\t\t\tif( args[i] !== args[j] ) throw new Error( `${ args[i] } ≠ ${ args[j] }` )\n\t\t\t}\n\t\t}\n\t}\n\t\n\texport function $mol_assert_unique( ... args : any[] ) {\n\t\tfor( let i = 0 ; i < args.length ; ++i ) {\n\t\t\tfor( let j = 0 ; j < args.length ; ++j ) {\n\t\t\t\tif( i === j ) continue\n\t\t\t\tif( args[i] === args[j] || ( Number.isNaN( args[i] as any as number ) && Number.isNaN( args[j] as any as number ) ) ) {\n\t\t\t\t\tthrow new Error( `args[${ i }] = args[${ j }] = ${ args[i] }` )\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\texport function $mol_assert_like< Value >( head : Value , ... tail : Value[] ) {\n\t\tfor( let value of tail ) {\n\t\t\tvalue = $mol_conform( value , head )\n\t\t\tif( Number.isNaN( value as any as number ) && Number.isNaN( head as any as number ) ) continue\n\t\t\tif( head !== value ) throw new Error( `${ head } ≄ ${ value }` )\n\t\t\thead = value\n\t\t}\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'init with overload'() {\n\t\t\tclass X extends $mol_object {\n\t\t\t\tfoo() {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = X.make({\n\t\t\t\tfoo : ()=> 2 ,\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_equal( x.foo() , 2 )\n\t\t} ,\n\t\t\t\n\t} )\n}\n","namespace $ {\n\n\texport namespace $$ { let $ }\n\t\n\texport class $mol_object {\n\t\t\n\t\tstatic $ : $mol_ambient_context = $ as any\n\n\t\tget $() {\n\t\t\tconst owner = this.object_owner()\n\t\t\treturn ( owner && owner.$ || $ ) as $mol_ambient_context\n\t\t}\n\t\t\n\t\tpublic static make< Instance >( this : { new() : Instance } , config : Partial< Instance > ) : Instance {\n\t\t\tconst instance = new this\n\t\t\tfor( let key in config ) instance[ key ] = config[ key ]\n\t\t\treturn instance\n\t\t}\n\t\t\n\t\tstatic toString() : string {\n\t\t\treturn this.name\n\t\t}\n\t\t\n\t\t'object_owner()' : any\n\t\tobject_owner( next? : any ) {\n\t\t\treturn this[ 'object_owner()' ] || ( this[ 'object_owner()' ] = next )\n\t\t}\n\t\t\n\t\t'object_host()' : any\n\t\tobject_host( next? : any ) {\n\t\t\treturn this[ 'object_host()' ] || ( this[ 'object_host()' ] = next )\n\t\t}\n\t\t\n\t\t'object_field()' : string\n\t\tobject_field( next? : string ) {\n\t\t\treturn this[ 'object_field()' ] || ( this[ 'object_field()' ] = next ) || ''\n\t\t}\n\t\t\n\t\tobject_id( next? : string ) {\n\t\t\treturn this[ Symbol.toStringTag ] || ( this[ Symbol.toStringTag ] = next ) || ''\n\t\t}\n\n\t\ttoString() {\n\t\t\treturn this.object_id()\n\t\t}\n\t\t\n\t\ttoJSON() {\n\t\t\treturn this.toString()\n\t\t}\n\t\t\n\t\tdestructor() { }\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_defer extends $mol_object {\n\t\t\n\t\tconstructor( public run : ()=> void ) {\n\t\t\tsuper()\n\t\t\t$mol_defer.add( this )\n\t\t}\n\t\t\n\t\tdestructor() {\n\t\t\t$mol_defer.drop( this )\n\t\t}\n\t\t\n\t\tstatic all : $mol_defer[] = []\n\t\tstatic timer = null as any\n\t\t\n\t\tstatic scheduleNative : ( handler : ()=> void ) => any = ( typeof requestAnimationFrame == 'function' )\n\t\t\t? handler => requestAnimationFrame( handler )\n\t\t\t: handler => setTimeout( handler , 16 )\n\t\t\n\t\tstatic schedule() {\n\t\t\tif( this.timer ) return\n\t\t\t\n\t\t\tthis.timer = this.scheduleNative( ()=> {\n\t\t\t\tthis.timer = null\n\t\t\t\tthis.run()\n\t\t\t} )\n\t\t}\n\t\t\n\t\tstatic unschedule() {\n\t\t\tif( !this.timer ) return\n\t\t\t\n\t\t\tcancelAnimationFrame( this.timer )\n\t\t\tthis.timer = null\n\t\t}\n\t\t\n\t\tstatic add( defer : $mol_defer ) {\n\t\t\tthis.all.push( defer )\n\t\t\tthis.schedule()\n\t\t}\n\t\t\n\t\tstatic drop( defer : $mol_defer ) {\n\t\t\tvar index = this.all.indexOf( defer )\n\t\t\tif( index >= 0 ) this.all.splice( index , 1 )\n\t\t}\n\t\t\n\t\tstatic run() {\n\t\t\tif( this.all.length === 0 ) return\n\t\t\tthis.schedule()\n\t\t\tfor( var defer : $mol_defer ; defer = this.all.shift() ; ) defer.run()\n\t\t\t//this.unschedule()\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\t/// Global storage of temporary state\n\texport var $mol_state_stack = new Map< string , any >()\n\t\n}\n","module $ {\n\t\n\t$mol_test({\n\t\t\n\t\t'caching'() {\n\t\t\t\n\t\t\tlet random = new $mol_atom( 'random' , ()=> Math.random() )\n\t\t\t\n\t\t\t$mol_assert_equal( random.get() , random.get() )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'lazyness'() {\n\t\t\t\n\t\t\tlet value = 0\n\t\t\tlet prop = new $mol_atom( 'prop' , ()=> value = 1 )\n\t\t\t\n\t\t\t$mol_defer.run()\n\t\t\t\n\t\t\t$mol_assert_equal( value , 0 )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'instant actualization'() {\n\t\t\t\n\t\t\tlet source = new $mol_atom( 'source' , ( next? : number )=> next || 1 )\n\t\t\tlet middle = new $mol_atom( 'middle' , ()=> source.get() + 1 )\n\t\t\tlet target = new $mol_atom( 'target' , ()=> middle.get() + 1 )\n\t\t\t\n\t\t\t$mol_assert_equal( target.get() , 3 )\n\t\t\t\n\t\t\tsource.set( 2 )\n\t\t\t\n\t\t\t$mol_assert_equal( target.get() , 4 )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'do not actualize when masters not changed'() {\n\t\t\t\n\t\t\tlet target_updates = 0 \n\n\t\t\tlet source = new $mol_atom( 'source' , ( next? : number )=> next || 1 )\n\t\t\tlet middle = new $mol_atom( 'middle' , ()=> Math.abs( source.get() ) )\n\t\t\tlet target = new $mol_atom( 'target' , ()=> {\n\t\t\t\t++ target_updates\n\t\t\t\treturn middle.get()\n\t\t\t} )\n\t\t\t\n\t\t\ttarget.get()\n\t\t\t$mol_assert_equal( target_updates , 1 )\n\t\t\t\n\t\t\tsource.set( -1 )\n\t\t\ttarget.get()\n\t\t\t\n\t\t\t$mol_assert_equal( target_updates , 1 )\n\t\t\t\t\t\t\n\t\t} ,\n\t\t\n\t\t'obsolete atoms actualized in initial order'() {\n\t\t\t\n\t\t\tlet actualizations = '' \n\n\t\t\tlet source = new $mol_atom( 'source' , ( next? : number )=> next || 1 )\n\t\t\tlet middle = new $mol_atom( 'middle' , ()=> {\n\t\t\t\tactualizations += 'M'\n\t\t\t\treturn source.get()\n\t\t\t} )\n\t\t\tlet target = new $mol_atom( 'target' , ()=> {\n\t\t\t\tactualizations += 'T'\n\t\t\t\tsource.get()\n\t\t\t\treturn middle.get()\n\t\t\t} )\n\t\t\t\n\t\t\ttarget.get()\n\t\t\t$mol_assert_equal( actualizations , 'TM' )\n\t\t\t\n\t\t\tsource.set( 2 )\n\t\t\t$mol_defer.run()\n\t\t\t\n\t\t\t$mol_assert_equal( actualizations , 'TMTM' )\n\t\t\t\t\t\t\n\t\t} ,\n\n\t\t'automatic deferred restart'() {\n\t\t\t\n\t\t\tlet targetValue : number\n\t\t\t\n\t\t\tlet source = new $mol_atom( 'source' , ( next? : number )=> next || 1 )\n\t\t\tlet middle = new $mol_atom( 'middle' , ()=> source.get() + 1 )\n\t\t\tlet target = new $mol_atom( 'target' , ()=> targetValue = middle.get() + 1 )\n\t\t\t\n\t\t\ttarget.get()\n\t\t\t$mol_assert_equal( targetValue , 3 )\n\t\t\t\n\t\t\tsource.set( 2 )\n\t\t\t$mol_assert_equal( targetValue , 3 )\n\t\t\t\n\t\t\t$mol_defer.run()\n\t\t\t$mol_assert_equal( targetValue , 4 )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'Right reactive change of source'() {\n\n\t\t\tlet targetValue : number\n\t\t\t\n\t\t\tlet test_counter = new $mol_atom<number>( 'test_counter' , next => {\n\t\t\t\tnew $mol_defer( ()=> {\n\t\t\t\t\ttest_counter.push( next || 1 )\n\t\t\t\t} )\n\t\t\t\t$mol_fail_hidden( new $mol_atom_wait )\n\t\t\t} )\n\t\t\t\n\t\t\tlet slave = new $mol_atom<number>( 'slave' , next => test_counter.get() )\n\t\t\tslave.actualize()\n\t\t\t\n\t\t\tlet res : Error[] = []\n\t\t\tconst error = new Error( 'test error' )\n\t\t\t\n\t\t\tconst test_task = new $mol_atom( 'test_task' )\n\t\t\t.then( () => test_counter.get() + 1 )\n\t\t\t.then( next => test_counter.set( next ) )\n\t\t\t.then( next => {\n\t\t\t\ttest_counter.set( next + 1 )\n\t\t\t\t$mol_fail_hidden( error )\n\t\t\t} )\n\t\t\t.catch( error => [ error ] )\n\t\t\t.then( next => res = next )\n\t\t\t\n\t\t\t$mol_defer.run()\n\t\t\t\n\t\t\t$mol_assert_equal( test_counter.get() , 3 )\n\t\t\t$mol_assert_equal( res[0] , error )\n\t\t} ,\n\t\t\n\t\t'error handling'() {\n\n\t\t\tlet source = new $mol_atom< number >( 'source' , ( next? : number )=> {\n\t\t\t\tconst error = new Error( 'Test error' )\n\t\t\t\terror['$mol_atom_catched'] = true\n\t\t\t\t$mol_fail_hidden( error )\n\t\t\t} )\n\t\t\tlet middle = new $mol_atom( 'middle' , ()=> source.get() + 1 )\n\t\t\tlet target = new $mol_atom( 'target' , ()=> middle.get() + 1 )\n\n\t\t\t$mol_assert_fail( ()=> target.get().valueOf() )\n\n\t\t} ,\n\n\t\t'setting equal state are ignored'() {\n\n\t\t\tlet atom = new $mol_atom( 'atom' , next => next || { foo : [777] } )\n\n\t\t\tlet v1 = atom.get()\n\t\t\tlet v2 = { foo : [777] }\n\t\t\tlet v3 = atom.set( v2 )\n\t\t\t\n\t\t\t$mol_assert_equal( v1 , v3 )\n\t\t\t$mol_assert_unique( v2 , v3 )\n\t\t} ,\n\t\t\n\t\t'setting equal to last setted are ignored until changed'() {\n\t\t\tlet val = { foo : [777] }\n\t\t\tlet called = 0\n\n\t\t\tlet atom = new $mol_atom( 'atom' , ()=> {\n\t\t\t\t++ called\n\t\t\t\treturn val\n\t\t\t} )\n\n\t\t\tatom.get()\n\t\t\t$mol_assert_equal( called , 1 )\n\n\t\t\tatom.set({ foo : [666] })\n\t\t\t$mol_assert_equal( called , 2 )\n\t\t\t\n\t\t\tatom.set({ foo : [666] })\n\t\t\t$mol_assert_equal( called , 2 )\n\t\t\tatom.value( { foo : [666] } , $mol_atom_force_update )\n\t\t\t$mol_assert_equal( called , 3 )\n\t\t\t\n\t\t\tatom.push({ foo : [777] })\n\n\t\t\tatom.set({ foo : [666] })\n\t\t\t$mol_assert_equal( called , 4 )\n\n\t\t\tatom.set({ foo : [555] })\n\t\t\t$mol_assert_equal( called , 5 )\n\t\t} ,\n\t\t\n\t\t'Next remains after restart'() {\n\n\t\t\tlet defer = new $mol_atom( 'defer' , next => {\n\t\t\t\tnew $mol_defer( ()=> {\n\t\t\t\t\tdefer.push({})\n\t\t\t\t} )\n\t\t\t\t$mol_fail_hidden( new $mol_atom_wait )\n\t\t\t} )\n\n\t\t\tlet value = {}\n\t\t\t\n\t\t\tlet task = new $mol_atom( 'task' , next => {\n\t\t\t\tdefer.get().valueOf()\n\t\t\t\treturn next\n\t\t\t} )\n\t\t\t\n\t\t\t$mol_assert_fail( ()=> task.set( value ).valueOf() , $mol_atom_wait )\n\n\t\t\t$mol_defer.run()\n\n\t\t\t$mol_assert_equal( task.get() , value )\n\t\t} ,\n\t})\n\t\n}\n","namespace $ {\n\t\n\texport enum $mol_atom_status {\n\t\tobsolete = 'obsolete' ,\n\t\tchecking = 'checking' ,\n\t\tpulling = 'pulling' ,\n\t\tactual = 'actual' ,\n\t}\n\t\n\texport class $mol_atom< Value = any > extends $mol_object {\n\t\t\n\t\tmasters : Set< $mol_atom<any> > | null = null\n\t\tslaves : Set< $mol_atom<any> > | null = null\n\t\t\n\t\tstatus = $mol_atom_status.obsolete\n\t\t\n\t\treadonly handler : ( next? : Value|Error , force? : $mol_atom_force )=> Value|void\n\n\t\t'value()' : Value|Error\n\n\t\tconstructor(\n\t\t\tid : string ,\n\t\t\thandler : ( next? : Value , force? : $mol_atom_force )=> Value|void = next => next ,\n\t\t) {\n\t\t\tsuper()\n\t\t\t\n\t\t\tthis.object_id( id )\n\t\t\tthis.handler = handler\n\t\t}\n\t\t\n\t\tdestructor() {\n\t\t\tthis.unlink()\n\t\t\tthis.status = $mol_atom_status.actual\n\t\t\t\n\t\t\tconst value = this['value()']\n\t\t\t\n\t\t\tif( value instanceof $mol_object ) {\n\t\t\t\tif( value.object_owner() === this ) value.destructor();\n\t\t\t}\n\n\t\t\tthis['value()'] = undefined\n\t\t}\n\t\t\n\t\tunlink() {\n\t\t\tthis.disobey_all()\n\t\t\tif( this.slaves ) this.check_slaves()\n\t\t}\n\t\t\n\t\tget( force? : $mol_atom_force ) {\n\t\t\t\n\t\t\tconst slave = $mol_atom.stack[0]\n\t\t\tif( slave ) {\n\t\t\t\tthis.lead( slave )\n\t\t\t\tslave.obey( this )\n\t\t\t}\n\t\t\t\n\t\t\tthis.actualize( force )\n\t\t\t\n\t\t\tconst value = this['value()'] as Value\n\t\t\t\n\t\t\tif( typeof Proxy !== 'function' && value instanceof Error ) {\n\t\t\t\tthrow value\n\t\t\t}\n\t\t\t\n\t\t\treturn value as Value\n\t\t}\n\t\t\n\t\tactualize( force? : $mol_atom_force ) {\n\t\t\t\n\t\t\tif( this.status === $mol_atom_status.pulling ) {\n\t\t\t\tthrow new Error( `Cyclic atom dependency of ${ this }` )\n\t\t\t}\n\t\t\t\n\t\t\tif( !force && this.status === $mol_atom_status.actual ) return\n\t\t\t\n\t\t\tconst slave = $mol_atom.stack[0]\n\t\t\t$mol_atom.stack[0] = this\n\t\t\t\n\t\t\tif( !force && this.status === $mol_atom_status.checking ) {\n\t\t\t\t\n\t\t\t\tthis.masters!.forEach(\n\t\t\t\t\tmaster => {\n\t\t\t\t\t\tif( this.status !== $mol_atom_status.checking ) return\n\t\t\t\t\t\tmaster.actualize()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tif( this.status === $mol_atom_status.checking ) {\n\t\t\t\t\tthis.status = $mol_atom_status.actual\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif( force || this.status !== $mol_atom_status.actual ) {\n\t\t\t\t\n\t\t\t\tconst oldMasters = this.masters\n\t\t\t\tthis.masters = null\n\t\t\t\t\n\t\t\t\tif( oldMasters ) oldMasters.forEach(\n\t\t\t\t\tmaster => {\n\t\t\t\t\t\tmaster.dislead( this )\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tthis.status = $mol_atom_status.pulling\n\t\t\t\tconst next = this.pull( force )\n\t\t\t\t\n\t\t\t\tif( next === undefined ) {\n\t\t\t\t\tthis.status = $mol_atom_status.actual\n\t\t\t\t} else {\n\t\t\t\t\tthis.push( next )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_atom.stack[0] = slave\n\t\t}\n\t\t\n\t\tpull( force? : $mol_atom_force ) {\n\t\t\ttry {\n\t\t\t\treturn this.handler( this._next , force )\n\t\t\t} catch( error ) {\n\t\t\t\tif( error[ '$mol_atom_catched' ] ) return error\n\t\t\t\tif( error instanceof $mol_atom_wait ) return error\n\t\t\t\t\n\t\t\t\tconsole.error( error.stack || error )\n\t\t\t\t\n\t\t\t\tif(!( error instanceof Error )) {\n\t\t\t\t\terror = new Error( error.stack || error )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\terror['$mol_atom_catched'] = true\n\t\t\t\treturn error\n\t\t\t}\n\t\t}\n\t\t\n\t\t_next : Value|Error\n\t\t_ignore : Value|Error\n\t\t\n\t\tset( next : Value ) {\n\t\t\treturn this.value( next )\n\t\t}\n\t\t\n\t\tpush( next_raw? : Value|Error ) : Value {\n\t\t\tif(!( next_raw instanceof $mol_atom_wait )) {\n\t\t\t\tthis._ignore = this._next\n\t\t\t\tthis._next = undefined\n\t\t\t}\n\t\t\t\n\t\t\tthis.status = next_raw === undefined ? $mol_atom_status.obsolete : $mol_atom_status.actual\n\t\t\t\n\t\t\tconst prev = this['value()']\n\t\t\t\n\t\t\tlet next = ( next_raw instanceof Error || prev instanceof Error ) ? next_raw : $mol_conform( next_raw , prev )\n\t\t\t\n\t\t\tif( next === prev ) return prev as Value\n\t\t\t\n\t\t\tif( prev instanceof $mol_object ) {\n\t\t\t\tif( prev.object_owner() === this ) prev.destructor()\n\t\t\t}\n\t\t\t\n\t\t\tif( next instanceof $mol_object ) {\n\t\t\t\tnext.object_owner( this )\n\t\t\t}\n\t\t\t\n\t\t\tif(( typeof Proxy === 'function' )&&( next instanceof Error )) {\n\t\t\t\tnext = new Proxy( next , {\n\t\t\t\t\tget( target : Error ) {\n\t\t\t\t\t\treturn $mol_fail_hidden( target.valueOf() )\n\t\t\t\t\t} ,\n\t\t\t\t\townKeys( target : Error ) : string[] {\n\t\t\t\t\t\treturn $mol_fail_hidden( target.valueOf() )\n\t\t\t\t\t} ,\n\t\t\t\t} )\n\t\t\t}\n\t\t\t\n\t\t\tthis['value()'] = next\n\t\t\t$mol_log( this , prev , '➔' , next )\n\t\t\t\n\t\t\tthis.obsolete_slaves()\n\t\t\t\n\t\t\treturn next as Value\n\t\t}\n\t\t\n\t\tobsolete_slaves() {\n\t\t\tif( !this.slaves ) return\n\t\t\t\n\t\t\tthis.slaves.forEach( slave => slave.obsolete() )\n\t\t}\n\t\t\n\t\tcheck_slaves() {\n\t\t\tif( this.slaves ) {\n\t\t\t\tthis.slaves.forEach( slave => slave.check() )\n\t\t\t} else {\n\t\t\t\t$mol_atom.actualize( this )\n\t\t\t}\n\t\t}\n\t\t\n\t\tcheck() {\n\t\t\t//if( this.status === $mol_atom_status.pulling ) {\n\t\t\t//\tthrow new Error( `May be obsolated while pulling ${ this }` )\n\t\t\t//}\n\t\t\t\n\t\t\tif( this.status === $mol_atom_status.actual || this.status === $mol_atom_status.pulling ) {\n\t\t\t\tthis.status = $mol_atom_status.checking\n\t\t\t\tthis.check_slaves()\n\t\t\t}\n\t\t\t\t\n\t\t}\n\t\t\n\t\tobsolete() {\n\t\t\tif( this.status === $mol_atom_status.obsolete ) return\n\t\t\t\n\t\t\t//if( this.status === $mol_atom_status.pulling ) {\n\t\t\t//\tthrow new Error( `Obsolated while pulling ${ this }` )\n\t\t\t//} \n\t\t\t\n\t\t\tthis.status = $mol_atom_status.obsolete\n\t\t\t\n\t\t\tthis.check_slaves()\n\t\t\t\n\t\t\treturn\n\t\t}\n\t\t\n\t\tlead( slave : $mol_atom<any> ) {\n\t\t\tif( !this.slaves ) {\n\t\t\t\tthis.slaves = new Set<$mol_atom<any>>()\n\t\t\t\t$mol_atom.unreap( this )\n\t\t\t}\n\t\t\tthis.slaves.add( slave )\n\t\t}\n\t\t\n\t\tdislead( slave : $mol_atom<any> ) {\n\t\t\tif( !this.slaves ) return\n\t\t\t\n\t\t\tif( this.slaves.size === 1 ) {\n\t\t\t\tthis.slaves = null\n\t\t\t\t$mol_atom.reap( this )\n\t\t\t} else {\n\t\t\t\tthis.slaves.delete( slave )\n\t\t\t}\n\t\t}\n\t\t\n\t\tobey( master : $mol_atom<any> ) {\n\t\t\tif( !this.masters ) this.masters = new Set< $mol_atom<any> >()\n\t\t\tthis.masters.add( master )\n\t\t}\n\t\t\n\t\tdisobey( master : $mol_atom<any> ) {\n\t\t\tif( !this.masters ) return\n\t\t\tthis.masters.delete( master )\n\t\t}\n\t\t\n\t\tdisobey_all() {\n\t\t\tif( !this.masters ) return\n\t\t\t\n\t\t\tthis.masters.forEach( master => master.dislead( this ) )\n\t\t\t\n\t\t\tthis.masters = null\n\t\t}\n\n\t\tcache( next? : Value|Error ) {\n\t\t\tif( next === undefined ) return this['value()']\n\t\t\treturn this['value()'] = next\n\t\t}\n\t\t\n\t\tvalue( next? : Value , force? : $mol_atom_force ) : Value {\n\n\t\t\tif( force === $mol_atom_force_cache ) return this.push( next )\n\n\t\t\tif( next !== undefined ) {\n\t\t\t\t\n\t\t\t\tif( force === $mol_atom_force ) return this.push( next )\n\n\t\t\t\tlet next_normal = $mol_conform( next , this._ignore )\n\t\t\t\tif( next_normal === this._ignore ) return this.get( force )\n\n\t\t\t\tif(!( this['value()'] instanceof Error )) {\n\t\t\t\t\tnext_normal = $mol_conform( next , this['value()'] )\n\t\t\t\t\tif( next_normal === this['value()'] ) return this.get( force )\n\t\t\t\t}\n\n\t\t\t\tthis._next = next_normal\n\t\t\t\tthis._ignore = next_normal\n\n\t\t\t\tforce = $mol_atom_force_update\n\t\t\t}\n\t\t\t\n\t\t\treturn this.get( force )\n\t\t}\n\t\t\n\t\tstatic stack = [] as $mol_atom<any>[]\n\t\tstatic updating : $mol_atom<any>[] = []\n\t\tstatic reaping = new Set< $mol_atom<any> >()\n\t\tstatic scheduled = false\n\t\t\n\t\tstatic actualize( atom : $mol_atom<any> ) {\n\t\t\t$mol_atom.updating.push( atom )\n\t\t\t$mol_atom.schedule()\n\t\t}\n\t\t\n\t\tstatic reap( atom : $mol_atom<any> ) {\n\t\t\t$mol_atom.reaping.add( atom )\n\t\t\t$mol_atom.schedule()\n\t\t}\n\t\t\n\t\tstatic unreap( atom : $mol_atom<any> ) {\n\t\t\t$mol_atom.reaping.delete( atom )\n\t\t}\n\t\t\n\t\tstatic schedule() {\n\t\t\tif( this.scheduled ) return\n\t\t\t\n\t\t\tnew $mol_defer(\n\t\t\t\t$mol_log_group( '$mol_atom.sync()' , () => {\n\t\t\t\t\tif( !this.scheduled ) return\n\t\t\t\t\tthis.scheduled = false\n\t\t\t\t\tthis.sync()\n\t\t\t\t} )\n\t\t\t)\n\t\t\t\n\t\t\tthis.scheduled = true\n\t\t}\n\t\t\n\t\tstatic sync() {\n\t\t\tthis.schedule()\n\t\t\t\n\t\t\twhile( true ) {\n\t\t\t\tconst atom = this.updating.shift()\n\t\t\t\tif( !atom ) break\n\t\t\t\tif( this.reaping.has( atom ) ) continue\n\t\t\t\tif( atom.status !== $mol_atom_status.actual ) atom.get()\n\t\t\t}\n\t\t\t\n\t\t\twhile( this.reaping.size ) {\n\t\t\t\tthis.reaping.forEach(\n\t\t\t\t\tatom => {\n\t\t\t\t\t\tthis.reaping.delete( atom )\n\t\t\t\t\t\tif( !atom.slaves ) atom.destructor()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\t\n\t\t\tthis.scheduled = false\n\t\t}\n\t\t\n\t\tthen< Next >( done : ( prev? : Value )=> Next , fail? : ( error : Error )=> Next ) {\n\t\t\t\n\t\t\tlet prev : Value\n\t\t\tlet next : Next\n\t\t\t\n\t\t\tconst atom = new $mol_atom<any>(\n\t\t\t\t`${ this }.then(${ done })` ,\n\t\t\t\t() => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( prev == undefined ) {\n\t\t\t\t\t\t\tconst val = this.get()\n\t\t\t\t\t\t\tif( val instanceof $mol_atom_wait ) return val\n\t\t\t\t\t\t\tif( val ) val.valueOf()\n\t\t\t\t\t\t\tprev = val\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( next == undefined ) {\n\t\t\t\t\t\t\tconst val = done( prev )\n\t\t\t\t\t\t\tif( val instanceof $mol_atom_wait ) return val\n\t\t\t\t\t\t\tif( val ) val.valueOf()\n\t\t\t\t\t\t\tnext = val\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn next\n\n\t\t\t\t\t} catch( error ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( error instanceof $mol_atom_wait ) return error\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( fail ) return fail( error )\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn error\n\t\t\t\t\t}\n\n\t\t\t\t} ,\n\t\t\t)\n\t\t\t\n\t\t\t$mol_atom.actualize( atom )\n\t\t\t\n\t\t\treturn atom\n\t\t}\n\t\t\n\t\tcatch( fail : ( error : Error )=> Value ) {\n\t\t\treturn this.then( next => next , fail )\n\t\t}\n\t\t\n\t}\n\t\n\t$mol_state_stack.set( '$mol_atom.stack' , $mol_atom.stack )\n\n\texport function $mol_atom_current< Value = any >() {\n\t\treturn $mol_atom.stack[0] as $mol_atom< Value >\n\t}\n\t\n\texport class $mol_atom_wait extends Error {\n\t\tname = '$mol_atom_wait'\n\t}\n\t\n\texport class $mol_atom_force extends Object {\n\t\t$mol_atom_force : boolean\n\t\tstatic $mol_atom_force : boolean\n\t\tstatic toString() { return this.name }\n\t}\n\n\texport class $mol_atom_force_cache extends $mol_atom_force {}\n\texport class $mol_atom_force_update extends $mol_atom_force {}\n\t\n}\n","var $node = new Proxy( {} , { get( target : any, field : string , wrapper : any ) {\n\treturn require( field )\n} } )\n","namespace $ {\n\t\n\t$mol_dom_context = $node['jsdom'].jsdom().defaultView as any\n\t\n}\n","namespace $ {\n\t\n\texport var $mol_dom_context : Window & {\n\t\tNode : typeof Node\n\t\tElement : typeof Element\n\t\tHTMLElement : typeof HTMLElement\n\t\tXMLHttpRequest : typeof XMLHttpRequest\n\t}\n\t\n}\n","namespace $ {\n\t\n\t$mol_test({\n\t\t\n\t\t'Make empty div'() {\n\t\t\t$mol_assert_equal( (<div/>).outerHTML , '<div></div>' )\n\t\t} ,\n\t\t\n\t\t'Define native field'() {\n\t\t\t\n\t\t\tconst dom = <input value={ 123 } /> as HTMLInputElement\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML , '<input>' )\n\t\t\t$mol_assert_equal( dom.value , '123' )\n\n\t\t} ,\n\t\t\n\t\t'Define attributes'() {\n\t\t\t\n\t\t\tconst dom = <div foo bar=\"123\" />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML , '<div foo=\"true\" bar=\"123\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define child nodes'() {\n\n\t\t\tconst dom =\n\t\t\t\t<div>\n\t\t\t\t\thello\n\t\t\t\t\t<strong>world</strong>\n\t\t\t\t\t!\n\t\t\t\t</div>\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML , '<div>hello<strong>world</strong>!</div>' )\n\n\t\t} ,\n\n\t\t'Function as component'() {\n\n\t\t\tfunction Button( props : { id : string } , action : string , target : string ) {\n\t\t\t\treturn <button { ... props } >{ action } { target }</button>\n\t\t\t}\n\n\t\t\tconst dom = <Button id=\"123\">click{ 'me' }</Button>\n\n\t\t\t$mol_assert_equal( dom.outerHTML , '<button id=\"123\">click me</button>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t})\n\t\n}\n","namespace JSX {\n\texport interface Element extends HTMLElement {}\n\texport interface ElementClass { render() : Element }\n\texport interface IntrinsicElements { [ key : string ] : { [ prop : string ] : any } }\n\texport interface ElementAttributesProperty { props : {} }\n}\n\nnamespace $ {\n\n\texport function $mol_dom_jsx< Props , Children extends Array< Node | string > >(\n\t\tElem : string | ( ( props : Props , ... children : Children ) => Element ) ,\n\t\tprops : Props ,\n\t\t... children : Children\n\t) {\n\n\t\tif( typeof Elem !== 'string' ) return Elem( props , ... children )\n\n\t\tconst document = $mol_dom_context.document\n\t\tconst node = document.createElement( Elem )\n\n\t\tfor( let child of [].concat.call( [] , ... children ) ) {\n\t\t\tif( typeof child === 'string' ) child = document.createTextNode( child )\n\t\t\tnode.appendChild( child )\n\t\t}\n\n\t\tfor( const key in props ) {\n\n\t\t\tlet descr : PropertyDescriptor | undefined\n\t\t\tlet proto = node\n\n\t\t\twhile( true ) {\n\n\t\t\t\tproto = Object.getPrototypeOf( proto )\n\t\t\t\tif( !proto ) {\n\t\t\t\t\tnode.setAttribute( key , String( props[ key ] ) )\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdescr = Object.getOwnPropertyDescriptor( proto , key )\n\t\t\t\tif( !descr ) continue\n\n\t\t\t\tif( descr.set ) Object.defineProperty( node , key , descr )\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\t\n\t\t\tnode[ key as any ] = props[ key ]\n\t\t}\n\n\t\treturn node\n\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test({\n\n\t\t'number'() {\n\t\t\tconst dict = new $mol_dict< number , number >()\n\t\t\t$mol_assert_equal( dict.get( 123 ) , undefined )\n\t\t\t$mol_assert_equal( dict.has( 123 ) , false )\n\n\t\t\tdict.set( 123 , 321 )\n\t\t\t$mol_assert_equal( dict.get( 123 ) , 321 )\n\t\t\t$mol_assert_equal( dict.has( 123 ) , true )\n\n\t\t\tdict.delete( 123 )\n\t\t\t$mol_assert_equal( dict.get( 123 ) , undefined )\n\t\t\t$mol_assert_equal( dict.has( 123 ) , false )\n\t\t} ,\n\n\t\t'pojo as key'() {\n\t\t\tconst dict = new $mol_dict< { foo : number } , number >()\n\t\t\t$mol_assert_equal( dict.get({ foo : 123 }) , undefined )\n\t\t\t$mol_assert_equal( dict.has({ foo : 123 }) , false )\n\n\t\t\tdict.set( { foo : 123 } , 321 )\n\t\t\t$mol_assert_equal( dict.get({ foo : 123 }) , 321 )\n\t\t\t$mol_assert_equal( dict.has({ foo : 123 }) , true )\n\n\t\t\tdict.delete({ foo : 123 })\n\t\t\t$mol_assert_equal( dict.get({ foo : 123 }) , undefined )\n\t\t\t$mol_assert_equal( dict.has({ foo : 123 }) , false )\n\t\t} ,\n\n\t\t'array as key'() {\n\t\t\tconst dict = new $mol_dict< [ number ] , number >()\n\t\t\t$mol_assert_equal( dict.get([ 123 ]) , undefined )\n\t\t\t$mol_assert_equal( dict.has([ 123 ]) , false )\n\n\t\t\tdict.set( [ 123 ] , 321 )\n\t\t\t$mol_assert_equal( dict.get([ 123 ]) , 321 )\n\t\t\t$mol_assert_equal( dict.has([ 123 ]) , true )\n\n\t\t\tdict.delete([ 123 ])\n\t\t\t$mol_assert_equal( dict.get([ 123 ]) , undefined )\n\t\t\t$mol_assert_equal( dict.has([ 123 ]) , false )\n\t\t} ,\n\n\t\t'html element as key'() {\n\t\t\tconst el = <div />\n\n\t\t\tconst dict = new $mol_dict< Element , number >()\n\t\t\t$mol_assert_equal( dict.get( el ) , undefined )\n\t\t\t$mol_assert_equal( dict.has( el ) , false )\n\n\t\t\tdict.set( el , 321 )\n\t\t\t$mol_assert_equal( dict.get( el ) , 321 )\n\t\t\t$mol_assert_equal( dict.has( el ) , true )\n\t\t\t\n\t\t\t$mol_assert_equal( dict.get( <div/> ) , undefined )\n\t\t\t$mol_assert_equal( dict.has( <div/> ) , false )\n\n\t\t\tdict.delete( el )\n\t\t\t$mol_assert_equal( dict.get( el ) , undefined )\n\t\t\t$mol_assert_equal( dict.has( el ) , false )\n\t\t} ,\n\n\t\t'for-of key restore'() {\n\t\t\t\n\t\t\tconst dict = new $mol_dict< number , number >([[ 123 , 321 ]])\n\t\t\t\n\t\t\tconst keys = [] as number[]\n\t\t\tconst vals = [] as number[]\n\n\t\t\tfor( const [ key , val ] of dict ) {\n\t\t\t\tkeys.push( key )\n\t\t\t\tvals.push( val )\n\t\t\t}\n\n\t\t\t$mol_assert_equal( keys.length , 1 )\n\t\t\t$mol_assert_equal( keys[0] , 123 )\n\t\t\t\n\t\t\t$mol_assert_equal( vals.length , 1 )\n\t\t\t$mol_assert_equal( vals[0] , 321 )\n\n\t\t} ,\n\n\t\t'forEach key restore'() {\n\n\t\t\tconst dict = new $mol_dict< number , number >([[ 123 , 321 ]])\n\t\t\t\n\t\t\tconst keys = [] as number[]\n\t\t\tconst vals = [] as number[]\n\n\t\t\tdict.forEach( ( val , key )=> {\n\t\t\t\tkeys.push( key )\n\t\t\t\tvals.push( val )\n\t\t\t} )\n\n\t\t\t$mol_assert_equal( keys.length , 1 )\n\t\t\t$mol_assert_equal( keys[0] , 123 )\n\t\t\t\n\t\t\t$mol_assert_equal( vals.length , 1 )\n\t\t\t$mol_assert_equal( vals[0] , 321 )\n\n\t\t} ,\n\n\t})\n}\n","namespace $ {\n\n\texport function $mol_dict_key( value : any ) {\n\t\t\n\t\tif( !value ) return JSON.stringify( value )\n\t\tif( typeof value !== 'object' ) return JSON.stringify( value )\n\n\t\tif( value instanceof Array ) return JSON.stringify( value )\n\t\tif( value.constructor === Object ) return JSON.stringify( value )\n\t\t\n\t\treturn value\n\t}\n\t\n\texport class $mol_dict< Key , Value > extends Map< Key , Value > {\n\n\t\tget( key : Key ) {\n\t\t\treturn super.get( $mol_dict_key( key ) )\n\t\t}\n\n\t\thas( key : Key ) {\n\t\t\treturn super.has( $mol_dict_key( key ) )\n\t\t}\n\n\t\tset( key : Key , value : Value ) {\n\t\t\treturn super.set( $mol_dict_key( key ) , value )\n\t\t}\n\n\t\tdelete( key : Key ) {\n\t\t\treturn super.delete( $mol_dict_key( key ) )\n\t\t}\n\n\t\tforEach( back : ( value : Value , key : Key , dict : Map< Key , Value > ) => void , context? : any ) {\n\t\t\treturn super.forEach( ( val , key , dict )=> {\n\t\t\t\tif( typeof key === 'string' ) key = JSON.parse( key )\n\t\t\t\treturn back.call( this , val , key , dict )\n\t\t\t} , context )\n\t\t}\n\n\t\t[Symbol.iterator]() {\n\t\t\tconst iterator = super[ Symbol.iterator ]()\n\t\t\t\n\t\t\treturn {\n\t\t\t\t[Symbol.iterator]() {\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\tnext() {\n\t\t\t\t\tconst iteration = iterator.next()\n\n\t\t\t\t\tif( !iteration.done ) {\n\t\t\t\t\t\tconst key = iteration.value[0]\n\t\t\t\t\t\tif( typeof key === 'string' ) iteration.value[0] = JSON.parse( key )\n\t\t\t\t\t}\n\n\t\t\t\t\treturn iteration\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\t$mol_test( {\n\n\t\t'cached property with simple key'() {\t\t\t\t\n\n\t\t\tclass X extends $mol_object {\n\t\t\t\t@ $mol_mem_key\n\t\t\t\tfoo( id : number , next? : Number ) {\n\t\t\t\t\tif( next == null ) return new Number( 123 )\n\t\t\t\t\treturn new Number( next )\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst x = new X\n\n\t\t\t// get\n\t\t\t$mol_assert_equal( x.foo( 0 ).valueOf() , 123 )\n\t\t\t$mol_assert_equal( x.foo( 0 ) , x.foo( 0 ) )\n\t\t\t$mol_assert_unique( x.foo( 0 ) , x.foo( 1 ) )\n\n\t\t\t// set\n\t\t\tx.foo( 0 , 321 )\n\t\t\t$mol_assert_equal( x.foo( 0 ).valueOf() , 321 )\n\n\t\t\t// reset\n\t\t\tx.foo( 0 , null )\n\t\t\t\n\t\t\t$mol_assert_equal( x.foo( 0 ).valueOf() , 123 )\n\n\t\t} ,\n\n\t\t'cached property with complex key'() {\n\n\t\t\tclass X extends $mol_object {\n\t\t\t\t@ $mol_mem_key\n\t\t\t\tfoo( ids : number[] ) {\n\t\t\t\t\treturn Math.random()\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst x = new X\n\n\t\t\t$mol_assert_equal( x.foo( [ 0 , 1 ] ) , x.foo( [ 0 , 1 ] ) )\n\t\t\t$mol_assert_unique( x.foo( [ 0 , 1 ] ) , x.foo( [ 0 , 2 ] ) )\n\t\t} ,\n\n\t\t'auto sync of properties'() {\n\n\t\t\tclass X extends $mol_object {\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tfoo( next? : number ) {\n\t\t\t\t\treturn next || 1\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tbar() {\n\t\t\t\t\treturn this.foo() + 1\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\txxx() {\n\t\t\t\t\treturn this.bar() + 1\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst x = new X\n\t\t\t$mol_assert_equal( x.bar() , 2 )\n\t\t\t$mol_assert_equal( x.xxx() , 3 )\n\n\t\t\tx.foo( 5 )\n\t\t\t$mol_assert_equal( x.xxx() , 7 )\n\t\t} ,\n\n\t\t//'must fail on recursive dependency'() {\n\t\t//\n\t\t//\tclass X extends $mol_object {\n\t\t//\n\t\t//\t\t@ $mol_prop()\n\t\t//\t\tfoo() : number {\n\t\t//\t\t\treturn this.foo() + 1\n\t\t//\t\t}\n\t\t//\n\t\t//\t}\n\t\t//\n\t\t//\tvar x = new X\n\t\t//\n\t\t//\ttry {\n\t\t//\t\tx.foo().valueOf()\n\t\t//\t\t$mol_assert_fail( 'Not tracked recursive dependency' )\n\t\t//\t} catch( error ) {\n\t\t//\t\t$mol_assert_equal( error.message , 'Recursive dependency! .foo()' )\n\t\t//\t}\n\t\t//} ,\n\n\t\t'must be deferred destroyed when no longer referenced'() {\n\n\t\t\tlet foo : any\n\t\t\tlet foo_destroyed = false\n\n\t\t\tclass B extends $mol_object {\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tshowing( next? : boolean ) {\n\t\t\t\t\tif( next === void 0 ) return true\n\t\t\t\t\treturn next\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tfoo() {\n\t\t\t\t\treturn foo = new class extends $mol_object {\n\t\t\t\t\t\tdestructor() {\n\t\t\t\t\t\t\tfoo_destroyed = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tbar() {\n\t\t\t\t\treturn this.showing() ? this.foo() : null\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar b = new B\n\n\t\t\tvar bar = b.bar()\n\t\t\t$mol_assert_ok( bar )\n\n\t\t\tb.showing( false )\n\t\t\tb.bar()\n\t\t\t$mol_defer.run()\n\t\t\t$mol_assert_ok( foo_destroyed )\n\t\t\t$mol_assert_not( b.bar() )\n\n\t\t\tb.showing( true )\n\t\t\t$mol_defer.run()\n\t\t\t$mol_assert_unique( b.bar() , bar )\n\t\t} ,\n\n\t\t'wait for data'() {\n\n\t\t\tclass Test extends $mol_object {\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tsource( next? : string , force? : $mol_atom_force ) : string {\n\t\t\t\t\tnew $mol_defer( () => {\n\t\t\t\t\t\tthis.source( 'Jin' , $mol_atom_force_cache )\n\t\t\t\t\t} )\n\t\t\t\t\treturn $mol_fail_hidden( new $mol_atom_wait( 'Wait for data!' ) )\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tmiddle() {\n\t\t\t\t\treturn this.source()\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\ttarget() {\n\t\t\t\t\treturn this.middle()\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst t = new Test\n\n\t\t\t$mol_assert_fail( ()=> t.target().valueOf() , $mol_atom_wait )\n\n\t\t\t$mol_defer.run()\n\n\t\t\t$mol_assert_equal( t.target() , 'Jin' )\n\t\t} ,\n\n\t} )\n\n}\n","namespace $ {\n\t\n\texport function $mol_mem< Host , Value >(\n\t\tobj? : Host ,\n\t\tname? : string ,\n\t\tdescr? : TypedPropertyDescriptor< ( next? : Value , force? : $mol_atom_force )=> Value >\n\t) {\n\n\t\tconst value = descr.value\n\t\tconst store = new WeakMap< Object , $mol_atom<Value> >()\n\t\t\n\t\tdescr.value = function $mol_mem_value( next? : Value , force? : $mol_atom_force ) {\n\t\t\tconst host : any = this\n\t\t\n\t\t\tlet atom : $mol_atom<Value> = store.get( host )\n\t\t\tif( !atom ) {\n\t\t\t\t\n\t\t\t\tconst id = `${ host }.${ name }()`\n\t\t\t\tatom = new $mol_atom<Value>( id , function() {\n\t\t\t\t\tconst v = value.apply( host , arguments )\n\t\t\t\t\tif( v instanceof $mol_object ) {\n\t\t\t\t\t\tif( !v.object_host() ) {\n\t\t\t\t\t\t\tv.object_host( host )\n\t\t\t\t\t\t\tv.object_field( name )\n\t\t\t\t\t\t\tv.object_id( id )\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn v\n\t\t\t\t} )\n\n\t\t\t\tatom.object_owner( host )\n\t\t\t\t\n\t\t\t\tconst destructor = atom.destructor\n\t\t\t\tatom.destructor = ()=> {\n\t\t\t\t\tstore.delete( host )\n\t\t\t\t\tdestructor.call( atom )\n\t\t\t\t}\n\n\t\t\t\tstore.set( host , atom )\n\t\t\t}\n\t\t\t\n\t\t\treturn atom.value( next , force )\n\t\t}\n\t\t\n\t\tObject.defineProperty( obj , name + \"()\" , { get : function() { return store.get( this ) } } )\n\n\t\tdescr.value[ 'value' ] = value\n\t}\n\n\texport function $mol_mem_key< Host , Key , Value >(\n\t\tobj : Host ,\n\t\tname : string ,\n\t\tdescr : TypedPropertyDescriptor< ( key : Key , next? : Value , force? : $mol_atom_force )=> Value >\n\t) {\n\t\tconst value = descr.value\n\t\tconst store = new WeakMap< Object , Map< any , $mol_atom<Value> > >()\n\t\t\n\t\tdescr.value = function $mol_mem_key_value( key : Key , next : Value , force? : $mol_atom_force ) {\n\t\t\tconst host : any = this\n\t\t\t\n\t\t\tlet dict = store.get( host )\n\t\t\tif( !dict ) store.set( host , dict = new $mol_dict )\n\t\t\t\n\t\t\tlet atom : $mol_atom<Value> = dict.get( key )\n\t\t\tif( !atom ) {\n\t\t\t\t\n\t\t\t\tconst id = `${ host }.${ name }(${ JSON.stringify( key ) })`\n\t\t\t\tatom = new $mol_atom<Value>( id , function( ... args: any[] ) {\n\t\t\t\t\tconst v = value.apply( host , [ key , ... args ] )\n\t\t\t\t\tif( v instanceof $mol_object ) {\n\t\t\t\t\t\tif( !v.object_host() ) {\n\t\t\t\t\t\t\tv.object_host( host )\n\t\t\t\t\t\t\tv.object_field( name )\n\t\t\t\t\t\t\tv.object_id( id )\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn v\n\t\t\t\t} )\n\n\t\t\t\tconst destructor = atom.destructor\n\t\t\t\tatom.destructor = ()=> {\n\t\t\t\t\tdict.delete( key )\n\t\t\t\t\tdestructor.call( atom )\n\t\t\t\t}\n\n\t\t\t\tdict.set( key , atom )\n\n\t\t\t}\n\t\t\t\n\t\t\treturn atom.value( next , force )\n\t\t}\n\t\t\n\t\tObject.defineProperty( obj , name + \"()\" , { get : function() { return store.get( this ) } } )\n\t\tvoid( ( descr.value as any )[ 'value' ] = value )\n\t}\n\t\n}\n"]}